{
    "name": "lsp-sample",
    "description": "A language server example",
    "author": "Microsoft Corporation",
    "license": "MIT",
    "version": "1.0.0",
    "repository": {
        "type": "git",
        "url": "https://github.com/Microsoft/vscode-extension-samples"
    },
    "publisher": "vscode-samples",
    "categories": [],
    "keywords": [
        "multi-root ready"
    ],
    "engines": {
        "vscode": "^1.33.0"
    },
    "extensionDependencies": [
        "hbenl.vscode-test-explorer"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./client/out/extension",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "Example configuration",
            "properties": {
                "languageServerExample.maxNumberOfProblems": {
                    "scope": "resource",
                    "type": "number",
                    "default": 100,
                    "description": "Controls the maximum number of problems produced by the server."
                },
                "languageServerExample.trace.server": {
                    "scope": "window",
                    "type": "string",
                    "enum": [
                        "off",
                        "messages",
                        "verbose"
                    ],
                    "default": "off",
                    "description": "Traces the communication between VS Code and the language server."
                },
                "exampleExplorer.logpanel": {
                    "description": "write diagnotic logs to an output panel",
                    "type": "boolean",
                    "scope": "resource"
                },
                "exampleExplorer.logfile": {
                    "description": "write diagnostic logs to the given file",
                    "type": "string",
                    "scope": "resource"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run webpack",
        "webpack": "npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js",
        "webpack:dev": "npm run clean && webpack --mode development --config ./client/webpack.config.js && webpack --mode development --config ./server/webpack.config.js",
        "compile": "tsc -b",
        "compile:client": "tsc -b ./client/tsconfig.json",
        "compile:server": "tsc -b ./server/tsconfig.json",
        "watch": "tsc -b -w",
        "lint": "npm run lint:client && npm run lint:server",
        "lint:client": "eslint --config ./client/.eslintrc.json ./client/src/*.ts",
        "lint:server": "eslint --config ./server/.eslintrc.json ./server/src/*.ts",
        "clean": "rimraf client/out && rimraf server/out",
        "postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
        "test": "sh ./scripts/e2e.sh"
    },
    "devDependencies": {
        "@types/node": "^12.12.11",
        "@typescript-eslint/parser": "^2.8.0",
        "eslint": "^6.7.0",
        "merge-options": "^2.0.0",
        "rimraf": "^3.0.0",
        "ts-loader": "^6.2.1",
        "tslint": "^5.20.1",
        "typescript": "^3.7.2",
        "webpack": "^4.41.2",
        "webpack-cli": "^3.3.10"
    },
    "dependencies": {}
}
